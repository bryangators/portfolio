name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest  
    environment: testing_env
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_PASSWORD: ${{ vars.DB_PASSWORD }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: psycopg2 prerequisites
      run: sudo apt-get install python-dev-is-python3 libpq-dev
    - name: Install Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
          DJANGO_DEBUG_MODE: ${{ vars.DJANGO_DEBUG_MODE }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: ${{ vars.DJANGO_ALLOWED_HOSTS }}
          CORS_ALLOWED_ORIGINS: ${{ vars.CORS_ALLOWED_ORIGINS }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_PASSWORD: ${{ vars.DB_PASSWORD }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_USER: ${{ vars.DB_USER }}
          EMAIL_CONTACT_ALIAS: ${{ secrets.EMAIL_CONTACT_ALIAS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      working-directory: ./backend
      run: |
        python manage.py migrate
        python manage.py test
  deploy:
      name: Deploying
      needs: [test]
      runs-on: ubuntu-latest
      steps:
      - name: Deploying Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_AWS_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/.scripts
            ./docker-deploy.sh
